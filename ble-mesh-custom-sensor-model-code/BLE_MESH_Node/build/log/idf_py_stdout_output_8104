[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\BLE_MESH_Node\build\bootloader\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Node/build/bootloader/bootloader.bin""
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Node/main/main.c:20:16: warning: 'ticks' defined but not used [-Wunused-variable]
   20 | static uint8_t ticks = 0;
      |                ^~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable BLE_MESH_Node.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32 image...
Merged 27 ELF sections
Successfully created esp32 image.
Generated D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Node/build/BLE_MESH_Node.bin
[7/8] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\BLE_MESH_Node\build\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Node/build/partition_table/partition-table.bin" "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Node/build/BLE_MESH_Node.bin""
BLE_MESH_Node.bin binary size 0xf6980 bytes. Smallest app partition is 0x100000 bytes. 0x9680 bytes (4%) free.
Warning: The smallest app partition is nearly full (4% free space left)!
[7/8] cmd.exe /C "cd /D D:\ESP_IDF\Espressif\frameworks\esp-idf-v5.1.2\components\esptool_py && D:\ESP_IDF\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2 -D SERIAL_TOOL=D:/ESP_IDF/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/BLE_MESH_Node/build" -P D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 BLE_MESH_Node.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.dev3
Serial port COM4
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: e4:65:b8:e7:45:64
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00106fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26640 bytes to 16691...
Writing at 0x00001000... (50 %)
Writing at 0x0000768a... (100 %)
Wrote 26640 bytes (16691 compressed) at 0x00001000 in 0.8 seconds (effective 271.2 kbit/s)...
Hash of data verified.
Compressed 1010048 bytes to 580829...
Writing at 0x00010000... (2 %)
Writing at 0x0001d3a2... (5 %)
Writing at 0x0002e32f... (8 %)
Writing at 0x0003b65d... (11 %)
Writing at 0x00044522... (13 %)
Writing at 0x00049dba... (16 %)
Writing at 0x0004f625... (19 %)
Writing at 0x00054c69... (22 %)
Writing at 0x0005ae9f... (25 %)
Writing at 0x000613bd... (27 %)
Writing at 0x00066f4c... (30 %)
Writing at 0x0006d517... (33 %)
Writing at 0x00074fd0... (36 %)
Writing at 0x0007b500... (38 %)
Writing at 0x0008156b... (41 %)
Writing at 0x00087030... (44 %)
Writing at 0x0008c970... (47 %)
Writing at 0x00092229... (50 %)
Writing at 0x00097e50... (52 %)
Writing at 0x0009e902... (55 %)
Writing at 0x000a4a2c... (58 %)
Writing at 0x000aa9b3... (61 %)
Writing at 0x000b09b0... (63 %)
Writing at 0x000b65c0... (66 %)
Writing at 0x000bc930... (69 %)
Writing at 0x000c2cc1... (72 %)
Writing at 0x000c86fa... (75 %)
Writing at 0x000ce1bd... (77 %)
Writing at 0x000d3a62... (80 %)
Writing at 0x000dc9b7... (83 %)
Writing at 0x000e46fe... (86 %)
Writing at 0x000ec861... (88 %)
Writing at 0x000f2c99... (91 %)
Writing at 0x000f83c6... (94 %)
Writing at 0x000fe0cd... (97 %)
Writing at 0x00103e7d... (100 %)
Wrote 1010048 bytes (580829 compressed) at 0x00010000 in 14.5 seconds (effective 557.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 460.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
