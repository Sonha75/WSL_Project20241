[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\node_BH\BLE_MESH_Node_BH\build\bootloader\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_BH/BLE_MESH_Node_BH/build/bootloader/bootloader.bin""
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/OLEDDisplay.c.obj
D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_BH/BLE_MESH_Node_BH/main/OLEDDisplay.c: In function 'OLEDDisplay_sendCommand':
D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_BH/BLE_MESH_Node_BH/main/OLEDDisplay.c:164:15: warning: unused variable 'ret' [-Wunused-variable]
  164 |     esp_err_t ret = i2c_master_cmd_begin(oled->i2c_port, cmd, 1000 / portTICK_PERIOD_MS);
      |               ^~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable BLE_MESH_Node_BH.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32 image...
Merged 3 ELF sections
Successfully created esp32 image.
Generated D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_BH/BLE_MESH_Node_BH/build/BLE_MESH_Node_BH.bin
[7/8] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\node_BH\BLE_MESH_Node_BH\build\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_BH/BLE_MESH_Node_BH/build/partition_table/partition-table.bin" "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_BH/BLE_MESH_Node_BH/build/BLE_MESH_Node_BH.bin""
BLE_MESH_Node_BH.bin binary size 0xef800 bytes. Smallest app partition is 0x220000 bytes. 0x130800 bytes (56%) free.
[7/8] cmd.exe /C "cd /D D:\ESP_IDF\Espressif\frameworks\esp-idf-v5.1.2\components\esptool_py && D:\ESP_IDF\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2 -D SERIAL_TOOL=D:/ESP_IDF/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_BH/BLE_MESH_Node_BH/build" -P D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM11 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x20000 BLE_MESH_Node_BH.bin 0x8000 partition_table/partition-table.bin 0xf000 ota_data_initial.bin
esptool.py v4.7.dev3
Serial port COM11
Connecting...........
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 10:06:1c:b5:ae:e0
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00020000 to 0x0010ffff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x0000f000 to 0x00010fff...
Compressed 26640 bytes to 16691...
Writing at 0x00001000... (50 %)
Writing at 0x0000768d... (100 %)
Wrote 26640 bytes (16691 compressed) at 0x00001000 in 0.6 seconds (effective 329.9 kbit/s)...
Hash of data verified.
Compressed 980992 bytes to 558594...
Writing at 0x00020000... (2 %)
Writing at 0x0002a4f8... (5 %)
Writing at 0x0003b945... (8 %)
Writing at 0x000499dd... (11 %)
Writing at 0x000571b3... (14 %)
Writing at 0x0005c66c... (17 %)
Writing at 0x0006269c... (20 %)
Writing at 0x00068093... (22 %)
Writing at 0x0006d7b5... (25 %)
Writing at 0x00072f2f... (28 %)
Writing at 0x00079094... (31 %)
Writing at 0x0007f395... (34 %)
Writing at 0x00084d95... (37 %)
Writing at 0x0008b035... (40 %)
Writing at 0x00092bce... (42 %)
Writing at 0x000994db... (45 %)
Writing at 0x0009f48d... (48 %)
Writing at 0x000a500e... (51 %)
Writing at 0x000aa931... (54 %)
Writing at 0x000b0032... (57 %)
Writing at 0x000b5ed7... (60 %)
Writing at 0x000bc975... (62 %)
Writing at 0x000c29c7... (65 %)
Writing at 0x000c8903... (68 %)
Writing at 0x000cea88... (71 %)
Writing at 0x000d45c8... (74 %)
Writing at 0x000da9de... (77 %)
Writing at 0x000e0c86... (80 %)
Writing at 0x000e6bb6... (82 %)
Writing at 0x000ed08e... (85 %)
Writing at 0x000f5327... (88 %)
Writing at 0x000fd5b5... (91 %)
Writing at 0x00103708... (94 %)
Writing at 0x00108f98... (97 %)
Writing at 0x0010ecf3... (100 %)
Wrote 980992 bytes (558594 compressed) at 0x00020000 in 12.7 seconds (effective 616.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 658.8 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x0000f000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x0000f000 in 0.1 seconds (effective 1159.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
