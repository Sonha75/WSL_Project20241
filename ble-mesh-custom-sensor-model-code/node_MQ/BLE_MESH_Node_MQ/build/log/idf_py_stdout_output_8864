[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\node_MQ\BLE_MESH_Node_MQ\build\bootloader\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_MQ/BLE_MESH_Node_MQ/build/bootloader/bootloader.bin""
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
In file included from D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_MQ/BLE_MESH_Node_MQ/main/main.c:17:
D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/driver/deprecated/driver/adc.h:19:2: warning: #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively" [-Wcpp]
   19 | #warning "legacy adc driver is deprecated, please migrate to use esp_adc/adc_oneshot.h and esp_adc/adc_continuous.h for oneshot mode and continuous mode drivers respectively"
      |  ^~~~~~~
D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_MQ/BLE_MESH_Node_MQ/main/main.c:31:16: warning: 'ticks' defined but not used [-Wunused-variable]
   31 | static uint8_t ticks = 0;
      |                ^~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable BLE_MESH_Node-MQ.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.dev3
Creating esp32 image...
Merged 27 ELF sections
Successfully created esp32 image.
Generated D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_MQ/BLE_MESH_Node_MQ/build/BLE_MESH_Node-MQ.bin
[7/8] cmd.exe /C "cd /D "D:\ESP_IDF\Ble mesh\esp32_btmesh\ble-mesh-custom-sensor-model-code\node_MQ\BLE_MESH_Node_MQ\build\esp-idf\esptool_py" && D:\ESP_IDF\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_MQ/BLE_MESH_Node_MQ/build/partition_table/partition-table.bin" "D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_MQ/BLE_MESH_Node_MQ/build/BLE_MESH_Node-MQ.bin""
BLE_MESH_Node-MQ.bin binary size 0xf6950 bytes. Smallest app partition is 0x220000 bytes. 0x1296b0 bytes (55%) free.
[7/8] cmd.exe /C "cd /D D:\ESP_IDF\Espressif\frameworks\esp-idf-v5.1.2\components\esptool_py && D:\ESP_IDF\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2 -D SERIAL_TOOL=D:/ESP_IDF/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=D:/ESP_IDF/Ble mesh/esp32_btmesh/ble-mesh-custom-sensor-model-code/node_MQ/BLE_MESH_Node_MQ/build" -P D:/ESP_IDF/Espressif/frameworks/esp-idf-v5.1.2/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x20000 BLE_MESH_Node-MQ.bin 0x8000 partition_table/partition-table.bin 0xf000 ota_data_initial.bin
esptool.py v4.7.dev3
Serial port COM4
Connecting....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
WARNING: Detected crystal freq 41.01MHz is quite different to normalized freq 40MHz. Unsupported crystal in use?
Crystal is 40MHz
MAC: c8:f0:9e:9a:37:08
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00020000 to 0x00116fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x0000f000 to 0x00010fff...
Compressed 26640 bytes to 16691...
Writing at 0x00001000... (50 %)
Writing at 0x0000768d... (100 %)
Wrote 26640 bytes (16691 compressed) at 0x00001000 in 0.9 seconds (effective 244.8 kbit/s)...
Hash of data verified.
Compressed 1010000 bytes to 580749...
Writing at 0x00020000... (2 %)
Writing at 0x0002d37d... (5 %)
Writing at 0x0003e2da... (8 %)
Writing at 0x0004b6bd... (11 %)
Writing at 0x0005445a... (13 %)
Writing at 0x00059d96... (16 %)
Writing at 0x0005f56a... (19 %)
Writing at 0x00064bba... (22 %)
Writing at 0x0006ae0a... (25 %)
Writing at 0x000712d6... (27 %)
Writing at 0x00076e6c... (30 %)
Writing at 0x0007d58a... (33 %)
Writing at 0x000851ed... (36 %)
Writing at 0x0008b472... (38 %)
Writing at 0x000914c9... (41 %)
Writing at 0x00096f7d... (44 %)
Writing at 0x0009c8df... (47 %)
Writing at 0x000a21e7... (50 %)
Writing at 0x000a7d96... (52 %)
Writing at 0x000ae993... (55 %)
Writing at 0x000b498e... (58 %)
Writing at 0x000ba9a1... (61 %)
Writing at 0x000c0906... (63 %)
Writing at 0x000c6552... (66 %)
Writing at 0x000cc7f8... (69 %)
Writing at 0x000d2bb4... (72 %)
Writing at 0x000d8605... (75 %)
Writing at 0x000de0b7... (77 %)
Writing at 0x000e395e... (80 %)
Writing at 0x000ec87c... (83 %)
Writing at 0x000f4737... (86 %)
Writing at 0x000fcb02... (88 %)
Writing at 0x00102ccf... (91 %)
Writing at 0x0010843b... (94 %)
Writing at 0x0010e111... (97 %)
Writing at 0x00113eb1... (100 %)
Wrote 1010000 bytes (580749 compressed) at 0x00020000 in 13.7 seconds (effective 588.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 285.3 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x0000f000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x0000f000 in 0.1 seconds (effective 594.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
